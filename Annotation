import cv2
import numpy as np
import os

def process_image(image_path):
    # Load the image
    image = cv2.imread(image_path)
    if image is None:
        print(f"Failed to load image {image_path}")
        return None

    # Convert to HSV space
    image_hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    #HSV range for Pyroxene(CPX)
    hue_center = 120
    saturation_center = 85
    value_center = 195

    # Setting colour range to include all CPX rock(light, normal, dark)
    hue_range = 10
    saturation_range = 40
    value_range = 60

    lower_purple = np.array([hue_center - hue_range, saturation_center - saturation_range, value_center - value_range])
    upper_purple = np.array([hue_center + hue_range, saturation_center + saturation_range, value_center + value_range])

    # Generate a Mask for later use
    mask = cv2.inRange(image_hsv, lower_purple, upper_purple)

    # Extract Purple area
    result = cv2.bitwise_and(image, image, mask=mask)
    return result

def batch_process(input_folder, output_folder):
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    for filename in os.listdir(input_folder):
        if filename.lower().endswith((".png", ".jpg", ".jpeg")):
            image_path = os.path.join(input_folder, filename)
            result = process_image(image_path)
            if result is not None:
                output_path = os.path.join(output_folder, filename)
                cv2.imwrite(output_path, result)
                print(f"Processed and saved: {output_path}")
            else:
                print(f"Processing failed for: {image_path}")

# Saving
input_folder = '/Mineral/Phase map'
output_folder = '/Mineral/CPX map'

batch_process(input_folder, output_folder)
